{"version":3,"sources":["utils/directions_bike_24px.svg","config/config.js","utils/db.js","utils/makeRideLayer.js","utils/startAndEndIcons.js","utils/moveMapTo.js","utils/getNewRide.js","Header/Header.js","Header/index.js","Layout/Layout.js","Layout/index.js","Map/Map.js","Map/index.js","Controls/Controls.js","Controls/index.js","SaveDialog/SaveDialog.js","SaveDialog/index.js","DeleteConfirm/index.js","DeleteConfirm/DeleteConfirm.js","App.js","index.js"],"names":["module","exports","MAPBOX_ACCESS_TOKEN","VIEWPORT_USA","latitude","longitude","zoom","transitionDuration","transitionInterpolator","FlyToInterpolator","COLORS","black","red","green","blue","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","dynamo","DynamoDB","DocumentClient","TableName","fetchRides","Promise","resolve","reject","scan","err","data","Items","map","ride","color","makeIconLayer","IconLayer","id","name","coordinates","path","iconAtlas","rider","iconMapping","x","y","width","height","mask","getIcon","getColor","getPosition","d","sizeMinPixels","makeRideLayer","layers","PathLayer","rounded","widthMinPixels","isSelected","startIconData","push","length","endIconData","startAndEndIcons","icons","moveMapTo","getNewRide","viewport","useStyles","makeStyles","theme","appBar","backgroundColor","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","avatars","display","alignItems","position","right","spacing","avatar","marginRight","menuButton","hide","Header","open","handleDrawerOpen","classes","handleDrawerClose","AppBar","className","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","root","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","loadingRides","bikeIcon","minWidth","rideName","whiteSpace","textOverflow","overflow","paddingRight","actionIcons","actionIconButton","content","flexGrow","contentShift","mainContent","top","bottom","left","Layout","rides","selectRide","selectedRideId","toggleSaveDialog","toggleDeleteConfirm","children","useTheme","React","useState","setOpen","CssBaseline","Drawer","anchor","paper","direction","Divider","List","ListItem","ListItemText","primary","LinearProgress","sort","a","b","localeCompare","bikeColor","isNew","canEdit","button","key","concat","handleSelection","selected","disableTouchRipple","ListItemIcon","size","disabled","fontSize","e","stopPropagation","Map","setViewport","setPath","lngLat","onViewportChange","mapboxApiAccessToken","mapStyle","viewState","card","transform","cardContent","paddingBottom","undo","save","delete","Controls","undoPath","Card","CardContent","wrapper","margin","buttonProgress","marginTop","SaveDialog","toggle","saveRide","setName","setDisabled","useEffect","onClose","labels","Dialog","aria-labelledby","DialogTitle","style","DialogContent","DialogContentText","TextField","autoFocus","label","type","fullWidth","onChange","value","target","DialogActions","Button","then","CircularProgress","DeleteConfirm","deleteFn","handleClose","aria-describedby","configureRides","selectedRide","existingRides","App","state","isSaveDialogOpen","isDeleteConfirmOpen","componentDidMount","setState","deleteRideFn","Key","filter","r","newRides","newState","newRide","slice","payload","uuid","put","Item","putRide","this","showControls","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c23fb18b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/directions_bike_24px.64beea8c.svg\";","import { FlyToInterpolator } from 'react-map-gl';\n\nexport const MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibmF0aGFua2lwcCIsImEiOiJjazNid2k3enIwN2QzM2Nucmp5b3NmaXY0In0.cMIErB8-bLVio-MGSeXlfg';\n\nexport const DRAWER_WIDTH = 300;\n\nexport const VIEWPORT_USA = {\n  latitude: 39.0,\n  longitude: -97.0,\n  zoom: 3.25,\n  transitionDuration: 'auto',\n  transitionInterpolator: new FlyToInterpolator(),\n  // transitionEasing: d3.easeCubic,\n};\n\nexport const COLORS = {\n  black: [0, 0, 0],\n  red: [150, 50, 50],\n  green: [50, 150 ,50],\n  blue: [50, 50, 150]\n};\n","import AWS from 'aws-sdk';\nimport { COLORS } from '../config';\n\nAWS.config.region = 'us-east-2'; // Region\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: 'us-east-2:1056edee-e9e2-4c61-8f7e-45d31a5ab8a4',\n});\n\nconst dynamo = new AWS.DynamoDB.DocumentClient();\nconst TableName = 'cyclog';\n\nexport function fetchRides() {\n  return new Promise((resolve, reject) => {\n    dynamo.scan({ TableName }, (err, data) => {\n      if (err) {\n        reject('ride list cannot be retrieved');\n      } else {\n        resolve(data.Items.map(ride => ({\n          ...ride,\n          color: COLORS.black,\n        })));\n      }\n    });\n  });\n}\n\nexport function putRide(ride) {\n  return new Promise((resolve, reject) => {\n    dynamo.put({ Item: ride, TableName }, (err, data) => {\n      if (err) {\n        reject('ride was not saved');\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nexport function deleteRide(ride) {\n  return new Promise((resolve, reject) => {\n    dynamo.delete({ TableName, Key: { id: ride.id } }, (err, data) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n","import { IconLayer, PathLayer } from '@deck.gl/layers';\nimport { COLORS } from '../config';\n// import rider from './rider.png';\nimport rider from './directions_bike_24px.svg';\n// import { fetchPath } from './fetchPath';\n\n// function getPath(data) {\n//   const setsOf100Points = [];\n//   for (let i = 0; data.path.length > i; i += 100) {\n//     setsOf100Points.push(data.path.slice(i, i+100));\n//   }\n//   return Promise.all(setsOf100Points.map(fetchPath))\n//     .then(paths =>\n//       [{ path: paths.reduce((a,c) => a.concat(c), []) }]\n//     );\n// }\n\nfunction makeIconLayer(data) {\n  return new IconLayer({\n    id: data.name,\n    data: [{ coordinates: data.path }],\n    iconAtlas: rider,\n    iconMapping: {\n      rider: {x: 0, y: 0, width: 24, height: 24, mask: true}\n    },\n    getIcon: () => 'rider',\n    getColor: () => data.color,\n    getPosition: d => d.coordinates,\n    sizeMinPixels: 28\n  });\n}\n\nfunction makePathLayer(data) {\n  return new PathLayer({\n    id: data.id,\n    data: [{ path: data.path }],\n    getColor: () => data.color,\n    rounded: true,\n    widthMinPixels: 2,\n  });\n}\n\nexport function makeRideLayer(ride) {\n  const layers = [makePathLayer(ride)];\n  if (ride.isSelected) {\n    const startIconData = {\n      ...ride,\n      name: `${ride.name}-start`,\n      color: COLORS.green,\n      path: ride.path[0]\n    };\n    layers.push(makeIconLayer(startIconData));\n\n    if (ride.path.length > 1) {\n      const endIconData = {\n        ...ride,\n        name: `${ride.name}-end`,\n        color: COLORS.red,\n        path: ride.path[ride.path.length - 1]\n      };\n      layers.push(makeIconLayer(endIconData));\n    }\n  }\n  return layers;\n}\n","import { COLORS } from '../config';\n\nexport function startAndEndIcons(ride) {\n  if (!ride) return [];\n\n  const icons = [];\n  icons.push({\n    ...ride,\n    name: `${ride.name}-start`,\n    color: COLORS.green,\n    path: ride.path[0]\n  });\n\n  if (ride.path.length > 1) {\n    icons.push({\n      ...ride,\n      name: `${ride.name}-end`,\n      color: COLORS.red,\n      path: ride.path[ride.path.length - 1]\n    });\n  }\n\n  return icons;\n};\n","import { VIEWPORT_USA } from '../config';\n\nexport const moveMapTo = ({ longitude, latitude, zoom }) => ({\n  ...VIEWPORT_USA,\n  longitude,\n  latitude,\n  zoom,\n});\n","import { COLORS } from '../config';\n\nexport function getNewRide(path, viewport) {\n  let ride = [];\n  if (!!path.length) {\n    ride = [{\n      id: '__new__',\n      name: '• New ride •',\n      color: COLORS.blue,\n      path,\n      viewport\n    }];\n  }\n  return ride;\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\n// import Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { DRAWER_WIDTH } from '../config';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: '#323296',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    marginLeft: DRAWER_WIDTH,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  avatars: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    position: 'absolute',\n    right: theme.spacing(2),\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n}));\n\nexport default function Header({ open, handleDrawerOpen, handleDrawerClose }) {\n  const classes = useStyles();\n\n  return (\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Sibling Cyclog\n          </Typography>\n          {/*<div className={classes.avatars}>\n            <Avatar className={classes.avatar}>N</Avatar>\n            <Avatar className={classes.avatar}>S</Avatar>\n            <Avatar className={classes.avatar}>J</Avatar>\n          </div>*/}\n        </Toolbar>\n      </AppBar>\n  );\n}\n","import Header from './Header';\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DirectionsBike from '@material-ui/icons/DirectionsBike';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport FiberNew from '@material-ui/icons/FiberNew';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Header from '../Header';\nimport { DRAWER_WIDTH } from '../config';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    backgroundColor: '#323296',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    marginLeft: DRAWER_WIDTH,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  avatars: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    position: 'absolute',\n    right: theme.spacing(2),\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: DRAWER_WIDTH,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: DRAWER_WIDTH,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'space-between',\n  },\n  loadingRides: {\n    padding: theme.spacing(0, 2),\n  },\n  bikeIcon: {\n    minWidth: 40,\n  },\n  rideName: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    paddingRight: 40,\n  },\n  actionIcons: {\n    position: 'absolute',\n    right: 8,\n  },\n  actionIconButton: {\n    marginLeft: 8,\n    padding: 8,\n  },\n  content: {\n    position: 'relative',\n    flexGrow: 1,\n    height: '100vh',\n    padding: theme.spacing(0),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -DRAWER_WIDTH,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  mainContent: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n}));\n\nexport default function Layout({ rides, selectRide, selectedRideId, toggleSaveDialog, toggleDeleteConfirm, children }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => setOpen(true);\n\n  const handleDrawerClose = () => setOpen(false);\n\n  const handleSelection = (ride) => selectRide(ride);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header\n        open={open}\n        handleDrawerOpen={handleDrawerOpen}\n        handleDrawerClose={handleDrawerClose}\n      />\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h6\" noWrap>\n            Rides\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {!rides.length && (\n            <>\n              <ListItem><ListItemText primary=\"Loading...\"/></ListItem>\n              <div className={classes.loadingRides}>\n                <LinearProgress />\n              </div>\n            </>\n          )\n          }\n          {rides\n            .sort((a,b) => a.name.localeCompare(b.name))\n            .map((ride) => {\n              const isSelected = ride.id === selectedRideId;\n              const bikeColor = isSelected ? 'primary' : 'disabled';\n              const isNew = ride.id === '__new__';\n              const canEdit = isSelected && !isNew;\n              return (\n                <ListItem\n                  button\n                  key={ride.name.concat(ride.id)}\n                  onClick={() => handleSelection(ride)}\n                  selected={isSelected}\n                  disableTouchRipple={isSelected}\n                >\n                  <ListItemIcon className={classes.bikeIcon}>\n                    <DirectionsBike color={bikeColor} />\n                  </ListItemIcon>\n                  <ListItemText className={classes.rideName} primary={ride.name} />\n                  {isNew &&\n                    <IconButton\n                      size=\"small\"\n                      className={classes.actionIcons}\n                      disabled\n                    >\n                      <FiberNew fontSize=\"small\" />\n                    </IconButton>\n                  }\n                  {canEdit &&\n                    <div className={classes.actionIcons}>\n                      <IconButton\n                        className={classes.actionIconButton}\n                        size=\"small\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          toggleSaveDialog(true);\n                        }}\n                      >\n                        <EditIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton\n                        className={classes.actionIconButton}\n                        size=\"small\"\n                        onClick={(e) => {\n                            e.stopPropagation();\n                            toggleDeleteConfirm(true);\n                        }}\n                      >\n                        <DeleteForever fontSize=\"small\" />\n                      </IconButton>\n                    </div>\n                  }\n                </ListItem>\n              );\n          })}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <div className={classes.mainContent}>\n          {children}\n        </div>\n      </main>\n    </div>\n  );\n}\n","import Layout from './Layout';\nexport default Layout;\n","import React from 'react';\nimport MapGL from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { MAPBOX_ACCESS_TOKEN } from '../config';\n\nconst Map = ({\n  viewport,\n  setViewport,\n  path,\n  setPath,\n  layers\n}) => (\n  <MapGL\n    {...viewport}\n    onClick={e => {\n      setPath([ ...path, e.lngLat]);\n      setViewport({\n          ...viewport,\n          longitude: e.lngLat[0],\n          latitude: e.lngLat[1],\n        });\n      }}\n      onViewportChange={setViewport}\n      mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n      mapStyle=\"mapbox://styles/mapbox/outdoors-v11\"\n      height=\"100%\"\n      width=\"100%\"\n    >\n      <DeckGL\n        viewState={viewport}\n        layers={layers}\n      />\n  </MapGL>\n);\n\nexport default Map;\n","import Map from './Map';\nexport default Map;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Undo from '@material-ui/icons/Undo';\nimport Save from '@material-ui/icons/Save';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: '50%',\n    transform: 'translateX(50%)',\n    width: 200,\n  },\n  cardContent: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    padding: theme.spacing(1),\n    '&:last-child': { paddingBottom: theme.spacing(1) },\n  },\n  undo: { color: '#323296' },\n  save: { color: '#329632' },\n  delete: { color: '#963232' },\n}));\n\nexport default function Controls({ undoPath, toggleSaveDialog, toggleDeleteConfirm }) {\n  const classes = useStyles();\n\n  const handleUndoClick = () => undoPath();\n\n  const handleSaveClick = () => toggleSaveDialog(true);\n\n  const handleDeleteClick = () => toggleDeleteConfirm(true);\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <IconButton\n            aria-label=\"undo\"\n            className={classes.undo}\n            onClick={handleUndoClick}\n          >\n            <Undo />\n          </IconButton>\n          <IconButton\n            aria-label=\"save\"\n            className={classes.save}\n            onClick={handleSaveClick}\n          >\n            <Save />\n          </IconButton>\n          <IconButton\n            aria-label=\"trash\"\n            className={classes.delete}\n            onClick={handleDeleteClick}\n          >\n            <DeleteForever />\n          </IconButton>\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n","import Controls from './Controls';\n\nexport default Controls;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function SaveDialog({ open, toggle, ride, saveRide }) {\n  const [name, setName] = useState(ride.name || '');\n  const [disabled, setDisabled] = useState(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setName(ride.name);\n  }, [ride]);\n\n  const onSaveClick = () => {\n    setDisabled(true);\n    saveRide({\n      ...ride,\n      name\n    }).then(() => {\n      setDisabled(false);\n    });\n  }\n\n  const onClose = () => {\n    toggle(false);\n  }\n\n  const labels = {\n    name: ride.id\n      ? 'Rename your ride'\n      : 'Give your ride a name'\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" style={{minWidth: 300}}>\n        Ride Details\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {labels.name}\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Name\"\n          type=\"text\"\n          fullWidth\n          onChange={({ target: { value } }) => setName(value)}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onClose}\n          disabled={disabled}\n        >\n          Cancel\n        </Button>\n        <div className={classes.wrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSaveClick}\n            disabled={disabled}\n          >\n            Save\n          </Button>\n          {disabled && <CircularProgress className={classes.buttonProgress} size={24} />}\n        </div>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import SaveDialog from './SaveDialog';\nexport default SaveDialog;\n","import DeleteConfirm from './DeleteConfirm';\nexport default DeleteConfirm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog({ open, deleteFn, toggleDeleteConfirm }) {\n\n  const handleClose = () => {\n    toggleDeleteConfirm(false);\n  };\n\n  const handleDelete = () => {\n    deleteFn().then(handleClose);\n  };\n  \n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Are you sure?\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Deleting a ride is permanent and irreversible.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Keep my Ride\n        </Button>\n        <Button onClick={handleDelete}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Delete Forever\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport uuid from 'uuid';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './App.scss';\nimport { VIEWPORT_USA, COLORS } from './config';\nimport {\n  moveMapTo,\n  fetchRides,\n  putRide,\n  deleteRide,\n  makeRideLayer,\n  startAndEndIcons,\n  getNewRide,\n} from './utils';\nimport Layout from './Layout';\nimport Map from './Map';\nimport Controls from './Controls';\nimport SaveDialog from './SaveDialog';\nimport DeleteConfirm from './DeleteConfirm';\n\nfunction configureRides(rides, selectedRide = {}) {\n  return rides.map(ride => {\n    const isSelected = ride.id === selectedRide.id;\n    return {\n      ...ride,\n      isSelected,\n      icons: isSelected ? startAndEndIcons(ride) : [],\n      color: isSelected ? COLORS.blue : COLORS.black,\n    };\n  });\n}\n\nconst existingRides = ride => ride.id !== '__new__';\n\nexport default class App extends React.Component {\n  state = {\n    rides: [],\n    selectedRide: null,\n    path: [],\n    viewport: VIEWPORT_USA,\n    isSaveDialogOpen: false,\n    isDeleteConfirmOpen: false,\n    deleteFn: null\n  };\n\n  componentDidMount = () => {\n    fetchRides()\n      .then(configureRides)\n      .then(rides => this.setState({ rides }));\n  }\n\n  deleteRideFn = (selectedRide) => () => {\n    const { rides } = this.state;\n    return deleteRide(selectedRide)\n      .then(() => new Promise(resolve =>\n        this.setState({\n          rides: rides.filter(r => r.id !== selectedRide.id)\n        }, resolve))\n      );\n  }\n\n  selectRide = (selectedRide) => {\n    const { rides } = this.state;\n    const newRides = configureRides(rides, selectedRide);\n    const viewport = moveMapTo(selectedRide.viewport);\n    const deleteFn = this.deleteRideFn(selectedRide);\n    this.setState({\n      selectedRide,\n      rides: newRides,\n      deleteFn,\n      viewport,\n    });\n  }\n\n  setPath = (path) => {\n    const deleteFn = () => this.setPath([]);\n    const newState = { path, deleteFn };\n    const { rides, viewport } = this.state;\n    if (!!path.length) {\n      const newRide = getNewRide(path, viewport);\n      const newRides = [\n        ...rides.filter(existingRides),\n        ...newRide\n      ];\n      newState.rides = configureRides(newRides, newRide[0]);\n      newState.selectedRide = newRide[0];\n    } else {\n      newState.rides = rides.filter(existingRides);\n      newState.selectedRide = null;\n    }\n    return new Promise(resolve => this.setState(newState, resolve));\n  }\n\n  undoPath = () => {\n    const { path } = this.state;\n    this.setPath(path.slice(0, -1));\n  }\n\n  saveRide = (ride) => {\n    const { path, viewport } = this.state;\n    const isNew = ride.id === '__new__';\n    const id = isNew ? uuid() : ride.id;\n    const payload = {\n      ...ride,\n      id,\n      viewport,\n    };\n    return putRide(payload)\n      .then(fetchRides)\n      .then((rides) => {\n        const newRides = [...rides.filter(existingRides)];\n        if (!isNew && !!path.length) {\n          newRides.push(getNewRide(path, viewport)[0]);\n        }\n        return configureRides(newRides, payload);\n      })\n      .then((rides) => {\n        this.setState({\n          rides,\n          selectedRide: payload,\n          deleteFn: this.deleteRideFn(payload),\n          path: isNew ? [] : path,\n          isSaveDialogOpen: false,\n        });\n      });\n  }\n\n  toggleSaveDialog = (isSaveDialogOpen) => this.setState({ isSaveDialogOpen });\n  toggleDeleteConfirm = (isDeleteConfirmOpen) => this.setState({ isDeleteConfirmOpen });\n  setViewport = (viewport) => this.setState({ viewport });\n\n  render() {\n    const { rides, selectedRide, path, viewport, isSaveDialogOpen, isDeleteConfirmOpen, deleteFn } = this.state;\n    const layers = [...rides.map(makeRideLayer)];\n    const showControls = !!path.length && selectedRide && selectedRide.id === '__new__';\n\n    return (\n      <>\n        <Layout\n          rides={rides}\n          selectRide={this.selectRide}\n          selectedRideId={selectedRide && selectedRide.id}\n          toggleSaveDialog={this.toggleSaveDialog}\n          toggleDeleteConfirm={this.toggleDeleteConfirm}\n        >\n          <Map\n            viewport={viewport}\n            setViewport={this.setViewport}\n            path={path}\n            setPath={this.setPath}\n            layers={layers}\n          />\n          {showControls && (\n            <Controls\n              undoPath={this.undoPath}\n              toggleSaveDialog={this.toggleSaveDialog}\n              toggleDeleteConfirm={this.toggleDeleteConfirm}\n            />\n          )}\n        </Layout>\n        <SaveDialog\n          open={isSaveDialogOpen}\n          toggle={this.toggleSaveDialog}\n          ride={selectedRide || {}}\n          saveRide={this.saveRide}\n        />\n        <DeleteConfirm\n          open={isDeleteConfirmOpen}\n          toggleDeleteConfirm={this.toggleDeleteConfirm}\n          deleteFn={deleteFn}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// serviceWorker.register();\n"],"sourceRoot":""}