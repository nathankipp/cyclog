{"version":3,"sources":["utils/directions_bike_24px.svg","config/config.js","Header/Header.js","Header/index.js","Layout/Layout.js","Layout/index.js","utils/db.js","utils/makeLayer.js","utils/startAndEndIcons.js","SaveDialog/SaveDialog.js","SaveDialog/index.js","Controls/Controls.js","Controls/index.js","App.js","index.js"],"names":["module","exports","MAPBOX_ACCESS_TOKEN","VIEWPORT_USA","latitude","longitude","zoom","transitionDuration","transitionInterpolator","FlyToInterpolator","COLORS","black","red","green","blue","useStyles","makeStyles","theme","appBar","backgroundColor","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","avatars","display","alignItems","position","right","spacing","avatar","marginRight","menuButton","hide","Header","open","handleDrawerOpen","classes","handleDrawerClose","useTheme","AppBar","className","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","root","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","loadingRides","content","flexGrow","height","contentShift","mainContent","top","bottom","left","Layout","rides","selectRide","children","React","useState","setOpen","selectedRide","setSelectedRide","CssBaseline","Drawer","anchor","paper","direction","Divider","List","length","ListItem","ListItemText","primary","LinearProgress","map","ride","button","key","name","id","handleSelection","selected","ListItemIcon","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","dynamo","DynamoDB","DocumentClient","fetchRides","Promise","resolve","reject","scan","TableName","err","data","Items","makeIcon","IconLayer","coordinates","path","iconAtlas","rider","iconMapping","x","y","mask","getIcon","getColor","getPosition","d","sizeMinPixels","makePath","PathLayer","rounded","widthMinPixels","startAndEndIcons","icons","push","wrapper","margin","buttonProgress","marginTop","SaveDialog","handleClose","handleClickSave","setName","disabled","setDisabled","Dialog","onClose","aria-labelledby","DialogTitle","style","minWidth","DialogContent","DialogContentText","TextField","autoFocus","label","type","fullWidth","onChange","value","target","DialogActions","Button","CircularProgress","size","card","transform","cardContent","paddingBottom","undo","save","delete","Controls","viewport","setPath","newRide","saveRide","Card","CardContent","slice","window","confirm","uuid","then","getNewRide","colorizePaths","r","moveMapTo","App","setRides","setIcons","setViewport","newRides","newIcons","newViewport","useEffect","end","newRideIcons","layers","e","lngLat","onViewportChange","mapboxApiAccessToken","mapStyle","viewState","put","Item","putRide","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.307dc73e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/directions_bike_24px.64beea8c.svg\";","import { FlyToInterpolator } from 'react-map-gl';\n\nexport const MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibmF0aGFua2lwcCIsImEiOiJjazNid2k3enIwN2QzM2Nucmp5b3NmaXY0In0.cMIErB8-bLVio-MGSeXlfg';\n\nexport const DRAWER_WIDTH = 240;\n\nexport const VIEWPORT_USA = {\n  latitude: 39.0,\n  longitude: -97.0,\n  zoom: 3.25,\n  transitionDuration: 'auto',\n  transitionInterpolator: new FlyToInterpolator(),\n  // transitionEasing: d3.easeCubic,\n};\n\nexport const NEW = \"My New Ride\";\n\nexport const COLORS = {\n  black: [0, 0, 0],\n  red: [150, 50, 50],\n  green: [50, 150 ,50],\n  blue: [50, 50, 150]\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { DRAWER_WIDTH } from '../config';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: '#323296',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    marginLeft: DRAWER_WIDTH,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  avatars: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    position: 'absolute',\n    right: theme.spacing(2),\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n}));\n\nexport default function Header({ open, handleDrawerOpen, handleDrawerClose }) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Chroncycle • A cycling chronical, brah\n          </Typography>\n          {/*<div className={classes.avatars}>\n            <Avatar className={classes.avatar}>N</Avatar>\n            <Avatar className={classes.avatar}>S</Avatar>\n            <Avatar className={classes.avatar}>J</Avatar>\n          </div>*/}\n        </Toolbar>\n      </AppBar>\n  );\n}\n","import Header from './Header';\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DirectionsBike from '@material-ui/icons/DirectionsBike';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Header from '../Header';\nimport { DRAWER_WIDTH } from '../config';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    backgroundColor: '#323296',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    marginLeft: DRAWER_WIDTH,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  avatars: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    position: 'absolute',\n    right: theme.spacing(2),\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: DRAWER_WIDTH,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: DRAWER_WIDTH,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'space-between',\n  },\n  loadingRides: {\n    padding: theme.spacing(0, 2),\n  },\n  content: {\n    position: 'relative',\n    flexGrow: 1,\n    height: '100vh',\n    padding: theme.spacing(0),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -DRAWER_WIDTH,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  mainContent: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n}));\n\nexport default function Layout({ rides, selectRide, children }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const [selectedRide, setSelectedRide] = React.useState(null);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleSelection = (ride) => {\n    selectRide(ride);\n    setSelectedRide(ride.id);\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header\n        open={open}\n        handleDrawerOpen={handleDrawerOpen}\n        handleDrawerClose={handleDrawerClose}\n      />\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h6\" noWrap>\n            Rides\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {!rides.length && (\n            <>\n              <ListItem><ListItemText primary=\"Loading...\"/></ListItem>\n              <div className={classes.loadingRides}>\n                <LinearProgress />\n              </div>\n            </>\n          )\n          }\n          {rides.map((ride) => (\n            <ListItem\n              button\n              key={ride.name}\n              onClick={() => handleSelection(ride)}\n              selected={ride.id === selectedRide}\n            >\n              <ListItemIcon><DirectionsBike /></ListItemIcon>\n              <ListItemText primary={ride.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <div className={classes.mainContent}>\n          {children}\n        </div>\n      </main>\n    </div>\n  );\n}\n","import Layout from './Layout';\nexport default Layout;\n","import AWS from 'aws-sdk';\nimport { COLORS } from '../config';\n\nAWS.config.region = 'us-east-2'; // Region\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: 'us-east-2:1056edee-e9e2-4c61-8f7e-45d31a5ab8a4',\n});\n\nconst dynamo = new AWS.DynamoDB.DocumentClient();\n\nexport function fetchRides() {\n  return new Promise((resolve, reject) => {\n    dynamo.scan({ TableName: 'cyclog' }, (err, data) => {\n      if (err) {\n        reject('ride list cannot be retrieved');\n      } else {\n        resolve(data.Items.map(ride => ({\n          ...ride,\n          color: COLORS.black,\n        })));\n      }\n    });\n  });\n}\n\nexport function putRide(ride) {\n  return new Promise((resolve, reject) => {\n    dynamo.put({ Item: ride, TableName: 'cyclog' }, (err, data) => {\n      if (err) {\n        reject('ride was not saved');\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n","import { IconLayer, PathLayer } from '@deck.gl/layers';\n// import rider from './rider.png';\nimport rider from './directions_bike_24px.svg';\n// import { fetchPath } from './fetchPath';\n\n// function getPath(data) {\n//   const setsOf100Points = [];\n//   for (let i = 0; data.path.length > i; i += 100) {\n//     setsOf100Points.push(data.path.slice(i, i+100));\n//   }\n//   return Promise.all(setsOf100Points.map(fetchPath))\n//     .then(paths =>\n//       [{ path: paths.reduce((a,c) => a.concat(c), []) }]\n//     );\n// }\n\nexport function makeIcon(data) {\n  return new IconLayer({\n    id: data.name,\n    data: [{ coordinates: data.path }],\n    iconAtlas: rider,\n    iconMapping: {\n      rider: {x: 0, y: 0, width: 24, height: 24, mask: true}\n    },\n    getIcon: () => 'rider',\n    getColor: () => data.color,\n    getPosition: d => d.coordinates,\n    sizeMinPixels: 28\n  });\n}\n\nexport function makePath(data) {\n  return new PathLayer({\n    id: data.name,\n    data: [{ path: data.path }],\n    getColor: () => data.color,\n    rounded: true,\n    widthMinPixels: 2,\n  });\n}\n","import { COLORS } from '../config';\n\nexport function startAndEndIcons(ride) {\n  if (!ride) return [];\n\n  const icons = [];\n  icons.push({\n    ...ride,\n    name: `${ride.name}-start`,\n    color: COLORS.green,\n    path: ride.path[0]\n  });\n\n  if (ride.path.length > 1) {\n    icons.push({\n      ...ride,\n      name: `${ride.name}-end`,\n      color: COLORS.red,\n      path: ride.path[ride.path.length - 1]\n    });\n  }\n\n  return icons;\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function SaveDialog({ open, handleClose, handleClickSave }) {\n  const [name, setName] = useState('');\n  const [disabled, setDisabled] = useState(false);\n\n  const classes = useStyles();\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" style={{minWidth: 300}}>\n        Ride Details\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Give your ride a name\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Name\"\n          type=\"text\"\n          fullWidth\n          onChange={({ target: { value } }) => setName(value)}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClose}\n          disabled={disabled}\n        >\n          Cancel\n        </Button>\n        <div className={classes.wrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setDisabled(true);\n              handleClickSave(name);\n            }}\n            disabled={disabled}\n          >\n            Save\n          </Button>\n          {disabled && <CircularProgress className={classes.buttonProgress} size={24} />}\n        </div>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import SaveDialog from './SaveDialog';\nexport default SaveDialog;\n","import React from 'react';\nimport uuid from 'uuid';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Undo from '@material-ui/icons/Undo';\nimport Save from '@material-ui/icons/Save';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport SaveDialog from '../SaveDialog';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: '50%',\n    transform: 'translateX(50%)',\n    width: 200,\n  },\n  cardContent: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    padding: theme.spacing(1),\n    '&:last-child': { paddingBottom: theme.spacing(1) },\n  },\n  undo: { color: '#323296' },\n  save: { color: '#329632' },\n  delete: { color: '#963232' },\n}));\n\nexport default function Controls({open, setOpen, viewport, path, setPath, newRide, saveRide}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleClickSaveIcon = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClickSave = name => {\n    const ride = {\n      ...newRide,\n      id: newRide.id || uuid(),\n      name\n    };\n    saveRide(ride).then(() => {\n      setOpen(false);\n    });\n  }\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <IconButton\n            aria-label=\"undo\"\n            className={classes.undo}\n            onClick={() => setPath(path.slice(0, -1))}\n          >\n            <Undo />\n          </IconButton>\n          <IconButton\n            aria-label=\"save\"\n            className={classes.save}\n            onClick={handleClickSaveIcon}\n          >\n            <Save />\n          </IconButton>\n          <IconButton\n            aria-label=\"trash\"\n            className={classes.delete}\n            onClick={() => {\n              if (window.confirm('are you sure?')) {\n                setPath([]);\n              }}\n          }>\n            <DeleteForever />\n          </IconButton>\n        </CardContent>\n      </Card>\n      <SaveDialog\n        open={open}\n        handleClickSave={handleClickSave}\n        handleClose={handleClose}\n      />\n    </>\n  );\n}\n\n/*\nimport uuid from 'uuid';\nimport React, { useState } from 'react';\nimport { NEW } from '../config';\n\n// const dot = ` ${String.fromCharCode(183)} `;\n\nconst Controls = ({ viewport, path, setPath, saveRide }) => {\n  const [name, setName] = useState(NEW);\n\n  function save() {\n    const data = {\n      id: uuid(),\n      rider: 'Nathan',\n      order: 1,\n      name,\n      path,\n      viewport: {\n        latitude: viewport.latitude,\n        longitude: viewport.longitude,\n        zoom: viewport.zoom,\n      },\n    };\n    return saveRide(data);\n  }\n\n  return (\n    <div className=\"Controls\">\n      <div><b>Recording...</b></div>\n      <div>\n        <a onClick={() => setPath(path.slice(0, -1))}>undo last</a>\n        <a onClick={() => {\n          if (window.confirm('are you sure?')) {\n            setPath([]);\n          }}}>\n          start over\n        </a>\n      </div>\n      <div>\n        <input value={name} onChange={e => setName(e.target.value)} />\n        <button onClick={save}>save</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Controls;\n*/\n","import Controls from './Controls';\n\nexport default Controls;\n","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport MapGL from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './App.scss';\nimport { MAPBOX_ACCESS_TOKEN, VIEWPORT_USA, COLORS, NEW } from './config';\nimport {\n  fetchRides,\n  putRide,\n  makeIcon,\n  makePath,\n  startAndEndIcons\n} from './utils';\nimport Controls from './Controls';\n\nfunction getNewRide(path, viewport) {\n  return [{\n    color: COLORS.blue,\n    path,\n    viewport\n  }];\n}\n\nconst colorizePaths = (rides, ride) => rides.map(r => ({\n  ...r,\n  color: r.id === ride.id\n    ? COLORS.blue\n    : COLORS.black,\n}));\n\nconst moveMapTo = ({ longitude, latitude, zoom }) => ({\n  ...VIEWPORT_USA,\n  longitude,\n  latitude,\n  zoom,\n});\n\nconst App = () => {\n  const [rides, setRides] = useState([]);\n  const [icons, setIcons] = useState([]);\n  const [path, setPath] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [viewport, setViewport] = useState(VIEWPORT_USA);\n\n  useEffect(() => {\n    fetchRides().then(setRides);\n  }, []);\n\n  function selectRide(ride) {\n    const newRides = colorizePaths(rides, ride);\n    const newIcons = ride.id ? startAndEndIcons(ride) : [];\n    const newViewport = moveMapTo(ride.viewport);\n    setRides(newRides);\n    setIcons(newIcons);\n    setViewport(newViewport);\n  }\n\n  useEffect(() => {\n    if (!!path.length) {\n      const newRide = getNewRide(path, viewport);\n      const end = path.length - 1;\n      const newViewport = {\n        ...viewport,\n        longitude: path[end][0],\n        latitude: path[end][1],\n      };\n      selectRide(newRide[0]);\n      setViewport(newViewport);\n    }\n  }, [path]);\n\n  function saveRide(ride) {\n    return putRide(ride)\n      .then(() => {\n        const newRides = [\n          ...rides,\n          {\n            ...ride,\n            color: COLORS.black\n          }\n        ];\n        setRides(newRides);\n        setPath([]);\n      });\n  }\n\n  let newRide = [];\n  let newRideIcons = [];\n  if (path.length) {\n    newRide = getNewRide(path, viewport);\n    newRideIcons = startAndEndIcons(newRide[0]);\n  }\n\n  const layers = [\n    ...rides.map(makePath),\n    ...icons.map(makeIcon),\n    ...newRide.map(makePath),\n    ...newRideIcons.map(makeIcon),\n  ];\n\n  return (\n    <Layout rides={rides} selectRide={selectRide}>\n      <MapGL\n        {...viewport}\n        onClick={e => {\n          setPath([ ...path, e.lngLat]);\n          setViewport({\n              ...viewport,\n              longitude: e.lngLat[0],\n              latitude: e.lngLat[1],\n            });\n          }}\n          onViewportChange={setViewport}\n          mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n          mapStyle=\"mapbox://styles/mapbox/outdoors-v11\"\n          height=\"100%\"\n          width=\"100%\"\n        >\n          <DeckGL\n            viewState={viewport}\n            layers={layers}\n          />\n      </MapGL>\n      {!!path.length && (\n          <Controls\n            open={open}\n            setOpen={setOpen}\n            viewport={viewport}\n            path={path}\n            setPath={setPath}\n            newRide={newRide[0]}\n            saveRide={saveRide}\n          />\n        )\n      }\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// serviceWorker.register();\n"],"sourceRoot":""}