{"version":3,"sources":["static/directions_bike_24px.svg","config/config.js","utils/db.js","utils/makeRideLayer.js","utils/helpers.js","Content/Content.js","Content/index.js","Header/Header.js","Header/index.js","Drawer/Drawer.js","Drawer/index.js","RideList/RideList.js","RideList/index.js","Map/Map.js","Map/index.js","Controls/Controls.js","Controls/index.js","SaveDialog/SaveDialog.js","SaveDialog/index.js","DeleteConfirm/DeleteConfirm.js","DeleteConfirm/index.js","App.js","index.js"],"names":["module","exports","MAPBOX_ACCESS_TOKEN","NEW_ID","VIEWPORT_USA","latitude","longitude","zoom","transitionDuration","transitionInterpolator","FlyToInterpolator","COLORS","black","red","green","blue","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","dynamo","DynamoDB","DocumentClient","TableName","fetchRides","Promise","resolve","reject","scan","err","data","Items","map","ride","color","makeIconLayer","IconLayer","id","name","coordinates","path","iconAtlas","rider","iconMapping","x","y","width","height","mask","getIcon","getColor","getPosition","d","sizeMinPixels","makeRideLayer","layers","PathLayer","rounded","widthMinPixels","isSelected","startIconData","push","length","endIconData","isNotNew","startAndEndIcons","icons","configureRides","rides","selectedRide","milage","lineString","units","getNewRide","viewport","moveMapTo","useStyles","makeStyles","theme","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","position","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","mainContent","top","right","bottom","left","Content","isDrawerOpen","children","classes","className","clsx","appBar","backgroundColor","appBarShift","hide","avatars","avatar","marginRight","menuButton","React","Header","memo","toggleDrawer","AppBar","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","drawer","flexShrink","drawerPaper","Drawer","anchor","open","paper","Divider","loadingRides","bikeIcon","minWidth","rideName","whiteSpace","textOverflow","overflow","paddingRight","actionIcons","actionIconButton","RideList","selectRide","toggleSaveDialog","toggleDeleteConfirm","List","ListItem","ListItemText","primary","LinearProgress","sort","a","b","localeCompare","date","isNew","canEdit","bikeColor","details","toFixed","join","button","key","concat","handleSelection","selected","disableTouchRipple","ListItemIcon","secondary","size","disabled","fontSize","e","stopPropagation","Map","setViewport","setPath","lngLat","onViewportChange","mapboxApiAccessToken","mapStyle","viewState","card","transform","cardContent","paddingBottom","undo","save","delete","Controls","undoPath","Card","CardContent","wrapper","margin","buttonProgress","marginTop","SaveDialog","toggle","saveRide","useState","setName","setDate","setDisabled","useEffect","onClose","labels","Dialog","aria-labelledby","DialogTitle","style","DialogContent","DialogContentText","TextField","autoFocus","label","type","fullWidth","onChange","value","target","DialogActions","Button","then","CircularProgress","DeleteConfirm","deleteFn","handleClose","aria-describedby","App","state","isSaveDialogOpen","isDeleteConfirmOpen","componentDidMount","setState","deleteRideFn","Key","filter","r","newRides","newState","newRide","slice","payload","uuid","put","Item","putRide","this","showControls","CssBaseline","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4d72451.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/directions_bike_24px.64beea8c.svg\";","import { FlyToInterpolator } from 'react-map-gl';\n\nexport const MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibmF0aGFua2lwcCIsImEiOiJjazNid2k3enIwN2QzM2Nucmp5b3NmaXY0In0.cMIErB8-bLVio-MGSeXlfg';\n\nexport const DRAWER_WIDTH = 300;\n\nexport const NEW_ID = 'NEW_ID';\n\nexport const VIEWPORT_USA = {\n  latitude: 39.0,\n  longitude: -97.0,\n  zoom: 3.25,\n  transitionDuration: 'auto',\n  transitionInterpolator: new FlyToInterpolator(),\n  // transitionEasing: d3.easeCubic,\n};\n\nexport const COLORS = {\n  black: [0, 0, 0],\n  red: [150, 50, 50],\n  green: [50, 150 ,50],\n  blue: [50, 50, 150]\n};\n","import AWS from 'aws-sdk';\nimport { COLORS } from '../config';\n\nAWS.config.region = 'us-east-2'; // Region\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: 'us-east-2:1056edee-e9e2-4c61-8f7e-45d31a5ab8a4',\n});\n\nconst dynamo = new AWS.DynamoDB.DocumentClient();\nconst TableName = 'cyclog';\n\nexport function fetchRides() {\n  return new Promise((resolve, reject) => {\n    dynamo.scan({ TableName }, (err, data) => {\n      if (err) {\n        reject('ride list cannot be retrieved');\n      } else {\n        resolve(data.Items.map(ride => ({\n          ...ride,\n          color: COLORS.black,\n        })));\n      }\n    });\n  });\n}\n\nexport function putRide(ride) {\n  return new Promise((resolve, reject) => {\n    dynamo.put({ Item: ride, TableName }, (err, data) => {\n      if (err) {\n        reject('ride was not saved');\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nexport function deleteRide(ride) {\n  return new Promise((resolve, reject) => {\n    dynamo.delete({ TableName, Key: { id: ride.id } }, (err, data) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n","import { IconLayer, PathLayer } from '@deck.gl/layers';\nimport { COLORS } from '../config';\n// import rider from './rider.png';\nimport rider from '../static/directions_bike_24px.svg';\n// import { fetchPath } from './fetchPath';\n\n// function getPath(data) {\n//   const setsOf100Points = [];\n//   for (let i = 0; data.path.length > i; i += 100) {\n//     setsOf100Points.push(data.path.slice(i, i+100));\n//   }\n//   return Promise.all(setsOf100Points.map(fetchPath))\n//     .then(paths =>\n//       [{ path: paths.reduce((a,c) => a.concat(c), []) }]\n//     );\n// }\n\nfunction makeIconLayer(data) {\n  return new IconLayer({\n    id: data.name,\n    data: [{ coordinates: data.path }],\n    iconAtlas: rider,\n    iconMapping: {\n      rider: {x: 0, y: 0, width: 24, height: 24, mask: true}\n    },\n    getIcon: () => 'rider',\n    getColor: () => data.color,\n    getPosition: d => d.coordinates,\n    sizeMinPixels: 28\n  });\n}\n\nfunction makePathLayer(data) {\n  return new PathLayer({\n    id: data.id,\n    data: [{ path: data.path }],\n    getColor: () => data.color,\n    rounded: true,\n    widthMinPixels: 2,\n  });\n}\n\nexport function makeRideLayer(ride) {\n  const layers = [makePathLayer(ride)];\n  if (ride.isSelected) {\n    const startIconData = {\n      ...ride,\n      name: `${ride.name}-start`,\n      color: COLORS.green,\n      path: ride.path[0]\n    };\n    layers.push(makeIconLayer(startIconData));\n\n    if (ride.path.length > 1) {\n      const endIconData = {\n        ...ride,\n        name: `${ride.name}-end`,\n        color: COLORS.red,\n        path: ride.path[ride.path.length - 1]\n      };\n      layers.push(makeIconLayer(endIconData));\n    }\n  }\n  return layers;\n}\n","import {lineString} from '@turf/helpers';\nimport length from '@turf/length';\nimport {\n  COLORS,\n  MAPBOX_ACCESS_TOKEN,\n  NEW_ID,\n  VIEWPORT_USA\n} from '../config';\n\nexport const isNotNew = ride => ride.id !== NEW_ID;\n\nfunction startAndEndIcons(ride) {\n  if (!ride) return [];\n\n  const icons = [];\n  icons.push({\n    ...ride,\n    name: `${ride.name}-start`,\n    color: COLORS.green,\n    path: ride.path[0]\n  });\n\n  if (ride.path.length > 1) {\n    icons.push({\n      ...ride,\n      name: `${ride.name}-end`,\n      color: COLORS.red,\n      path: ride.path[ride.path.length - 1]\n    });\n  }\n\n  return icons;\n};\n\nexport const configureRides = (rides, selectedRide = {}) =>\n  rides.map(ride => {\n    const isSelected = ride.id === selectedRide.id;\n    return {\n      ...ride,\n      isSelected,\n      icons: isSelected ? startAndEndIcons(ride) : [],\n      color: isSelected ? COLORS.blue : COLORS.black,\n      milage: ride.path.length > 1\n      ? length(lineString(ride.path), { units: 'miles' })\n      : 0\n    };\n  });\n\nexport const getNewRide = (path, viewport) => {\n  let ride = [];\n  if (!!path.length) {\n    ride = [{\n      id: NEW_ID,\n      name: '• New ride •',\n      color: COLORS.blue,\n      path,\n      viewport\n    }];\n  }\n  return ride;\n}\n\nexport const fetchPath = (coordinates) => {\n  const c = coordinates\n    .reduce((a, c) => { a.push(`${c[0]},${c[1]}`); return a; }, [])\n    .join(';');\n  const r = coordinates\n    .map(() => 20)\n    .join(';');\n  return fetch(`https://api.mapbox.com/matching/v5/mapbox/cycling/${c}?radiuses=${r}&tidy=true&geometries=geojson&access_token=${MAPBOX_ACCESS_TOKEN}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  })\n    .then(res => res.json())\n    .then(({ matchings }) => matchings.reduce(\n      (a,c) => {\n        a.push(c.geometry.coordinates);\n        return a;\n      }, [])\n    );\n}\n\nexport const colorizePaths = (rides, ride) =>\n  rides.map(r => ({\n    ...r,\n    color: r.id === ride.id\n      ? COLORS.blue\n      : COLORS.black,\n  }));\n\nexport const moveMapTo = ({ longitude, latitude, zoom }) => ({\n  ...VIEWPORT_USA,\n  longitude,\n  latitude,\n  zoom,\n});\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DRAWER_WIDTH } from '../config';\n\nconst useStyles = makeStyles(theme => ({\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'space-between',\n  },\n  content: {\n    position: 'relative',\n    flexGrow: 1,\n    height: '100vh',\n    padding: theme.spacing(0),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -DRAWER_WIDTH,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  mainContent: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n}));\n\nexport default function Content({ isDrawerOpen,  children }) {\n  const classes = useStyles();\n\n  return (\n    <main\n      className={clsx(classes.content, {\n        [classes.contentShift]: isDrawerOpen,\n      })}\n    >\n      <div className={classes.drawerHeader} />\n      <div className={classes.mainContent}>\n        {children}\n      </div>\n    </main>\n  );\n}\n","import Content from './Content';\nexport default Content;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\n// import Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { DRAWER_WIDTH } from '../config';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: '#323296',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    marginLeft: DRAWER_WIDTH,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  hide: {\n    display: 'none',\n  },\n  avatars: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    position: 'absolute',\n    right: theme.spacing(2),\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction Header({ isDrawerOpen, toggleDrawer }) {\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => toggleDrawer(true);\n\n  return (\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: isDrawerOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, isDrawerOpen && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Sibling Cyclog\n          </Typography>\n          {/*<div className={classes.avatars}>\n            <Avatar className={classes.avatar}>N</Avatar>\n            <Avatar className={classes.avatar}>S</Avatar>\n            <Avatar className={classes.avatar}>J</Avatar>\n          </div>*/}\n        </Toolbar>\n      </AppBar>\n  );\n}\n\nexport default React.memo(Header);\n","import Header from './Header';\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { DRAWER_WIDTH } from '../config';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: DRAWER_WIDTH,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: DRAWER_WIDTH,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'space-between',\n  },\n}));\n\nfunction MyDrawer({ isDrawerOpen, toggleDrawer, children }) {\n  const classes = useStyles();\n\n  const handleDrawerClose = () => toggleDrawer(false);\n\n  return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isDrawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h6\" noWrap>\n            Rides\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        {children}\n      </Drawer>\n  );\n}\n\nexport default React.memo(MyDrawer);\n","import Drawer from './Drawer';\nexport default Drawer;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DirectionsBike from '@material-ui/icons/DirectionsBike';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport FiberNew from '@material-ui/icons/FiberNew';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { NEW_ID } from '../config';\n\nconst useStyles = makeStyles(theme => ({\n  loadingRides: {\n    padding: theme.spacing(0, 2),\n  },\n  bikeIcon: {\n    minWidth: 40,\n  },\n  rideName: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    paddingRight: 40,\n  },\n  actionIcons: {\n    position: 'absolute',\n    right: 8,\n  },\n  actionIconButton: {\n    marginLeft: 8,\n    padding: 8,\n  },\n}));\n\nfunction RideList({ rides, selectRide, toggleSaveDialog, toggleDeleteConfirm, children }) {\n  const classes = useStyles();\n\n  const handleSelection = (ride) => selectRide(ride);\n\n  return (\n    <List>\n      {!rides.length && (\n        <>\n          <ListItem><ListItemText primary=\"Loading...\"/></ListItem>\n          <div className={classes.loadingRides}>\n            <LinearProgress />\n          </div>\n        </>\n      )\n      }\n      {rides\n        .sort((a,b) => a.name.localeCompare(b.name))\n        .map((ride) => {\n          const { id, name, isSelected, milage, date } = ride;\n          const isNew = id === NEW_ID;\n          const canEdit = isSelected && !isNew;\n          const bikeColor = isSelected ? 'primary' : 'disabled';\n          let details = date ? [date] : [];\n          details.push(`${milage.toFixed(1)}mi`);\n          details = details.join(' • ')\n          return (\n            <ListItem\n              button\n              key={name.concat(id)}\n              onClick={() => handleSelection(ride)}\n              selected={isSelected}\n              disableTouchRipple={isSelected}\n            >\n              <ListItemIcon className={classes.bikeIcon}>\n                <DirectionsBike color={bikeColor} />\n              </ListItemIcon>\n              <ListItemText\n                className={classes.rideName}\n                primary={name}\n                secondary={details}\n              />\n              {isNew &&\n                <IconButton\n                  size=\"small\"\n                  className={classes.actionIcons}\n                  disabled\n                >\n                  <FiberNew fontSize=\"small\" />\n                </IconButton>\n              }\n              {canEdit &&\n                <div className={classes.actionIcons}>\n                  <IconButton\n                    className={classes.actionIconButton}\n                    size=\"small\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      toggleSaveDialog(true);\n                    }}\n                  >\n                    <EditIcon fontSize=\"small\" />\n                  </IconButton>\n                  <IconButton\n                    className={classes.actionIconButton}\n                    size=\"small\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        toggleDeleteConfirm(true);\n                    }}\n                  >\n                    <DeleteForever fontSize=\"small\" />\n                  </IconButton>\n                </div>\n              }\n            </ListItem>\n          );\n      })}\n    </List>\n  );\n}\n\nexport default React.memo(RideList);\n","import RideList from './RideList';\nexport default RideList;\n","import React from 'react';\nimport MapGL from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { MAPBOX_ACCESS_TOKEN } from '../config';\n\nconst Map = ({\n  viewport,\n  setViewport,\n  path,\n  setPath,\n  layers\n}) => (\n  <MapGL\n    {...viewport}\n    onClick={e => {\n      setPath([ ...path, e.lngLat]);\n      setViewport({\n          ...viewport,\n          longitude: e.lngLat[0],\n          latitude: e.lngLat[1],\n        });\n      }}\n      onViewportChange={setViewport}\n      mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n      mapStyle=\"mapbox://styles/mapbox/outdoors-v11\"\n      height=\"100%\"\n      width=\"100%\"\n    >\n      <DeckGL\n        viewState={viewport}\n        layers={layers}\n      />\n  </MapGL>\n);\n\nexport default Map;\n","import Map from './Map';\nexport default Map;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Undo from '@material-ui/icons/Undo';\nimport Save from '@material-ui/icons/Save';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: '50%',\n    transform: 'translateX(50%)',\n    width: 200,\n  },\n  cardContent: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    padding: theme.spacing(1),\n    '&:last-child': { paddingBottom: theme.spacing(1) },\n  },\n  undo: { color: '#323296' },\n  save: { color: '#329632' },\n  delete: { color: '#963232' },\n}));\n\nfunction Controls({ undoPath, toggleSaveDialog, toggleDeleteConfirm }) {\n  const classes = useStyles();\n\n  const handleUndoClick = () => undoPath();\n\n  const handleSaveClick = () => toggleSaveDialog(true);\n\n  const handleDeleteClick = () => toggleDeleteConfirm(true);\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <IconButton\n            aria-label=\"undo\"\n            className={classes.undo}\n            onClick={handleUndoClick}\n          >\n            <Undo />\n          </IconButton>\n          <IconButton\n            aria-label=\"save\"\n            className={classes.save}\n            onClick={handleSaveClick}\n          >\n            <Save />\n          </IconButton>\n          <IconButton\n            aria-label=\"trash\"\n            className={classes.delete}\n            onClick={handleDeleteClick}\n          >\n            <DeleteForever />\n          </IconButton>\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(Controls);\n","import Controls from './Controls';\n\nexport default Controls;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nfunction SaveDialog({ open, toggle, ride, saveRide }) {\n  const [name, setName] = useState(ride.name || '');\n  const [date, setDate] = useState(ride.date || '');\n  const [disabled, setDisabled] = useState(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setName(ride.name);\n    setDate(ride.date);\n  }, [ride]);\n\n  const onSaveClick = () => {\n    setDisabled(true);\n    saveRide({\n      ...ride,\n      name,\n      date,\n    }).then(() => {\n      setDisabled(false);\n    });\n  }\n\n  const onClose = () => toggle(false);\n\n  const labels = {\n    name: ride.id\n      ? 'Update your ride'\n      : 'Save this ride'\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" style={{minWidth: 300}}>\n        Ride Details\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {labels.name}\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Name\"\n          type=\"text\"\n          fullWidth\n          onChange={({ target: { value } }) => setName(value)}\n          value={name}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"date\"\n          label=\"Date\"\n          type=\"text\"\n          fullWidth\n          onChange={({ target: { value } }) => setDate(value)}\n          value={date}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onClose}\n          disabled={disabled}\n        >\n          Cancel\n        </Button>\n        <div className={classes.wrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSaveClick}\n            disabled={disabled}\n          >\n            Save\n          </Button>\n          {disabled && <CircularProgress className={classes.buttonProgress} size={24} />}\n        </div>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default React.memo(SaveDialog);\n","import SaveDialog from './SaveDialog';\nexport default SaveDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction DeleteConfirm({ open, toggle, deleteFn }) {\n\n  const handleClose = () => {\n    toggle(false);\n  };\n\n  const handleDelete = () => {\n    deleteFn().then(handleClose);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Are you sure?\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Deleting a ride is permanent and irreversible.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Keep my Ride\n        </Button>\n        <Button onClick={handleDelete}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Delete Forever\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default React.memo(DeleteConfirm);\n","import DeleteConfirm from './DeleteConfirm';\nexport default DeleteConfirm;\n","import React from 'react';\nimport uuid from 'uuid';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { VIEWPORT_USA, NEW_ID } from './config';\nimport {\n  configureRides,\n  deleteRide,\n  fetchRides,\n  getNewRide,\n  isNotNew,\n  makeRideLayer,\n  moveMapTo,\n  putRide,\n} from './utils';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Content from './Content';\nimport Header from './Header';\nimport Drawer from './Drawer';\nimport RideList from './RideList';\nimport Map from './Map';\nimport Controls from './Controls';\nimport SaveDialog from './SaveDialog';\nimport DeleteConfirm from './DeleteConfirm';\n\nexport default class App extends React.Component {\n  state = {\n    rides: [],\n    selectedRide: {},\n    path: [],\n    viewport: VIEWPORT_USA,\n    isDrawerOpen: true,\n    isSaveDialogOpen: false,\n    isDeleteConfirmOpen: false,\n    deleteFn: null\n  };\n\n  componentDidMount = () => {\n    fetchRides()\n      .then(configureRides)\n      .then(rides => this.setState({ rides }));\n  }\n\n  deleteRideFn = (selectedRide) => () => {\n    const { rides } = this.state;\n    return deleteRide(selectedRide)\n      .then(() => new Promise(resolve =>\n        this.setState({\n          rides: rides.filter(r => r.id !== selectedRide.id)\n        }, resolve))\n      );\n  }\n\n  selectRide = (selectedRide) => {\n    const { rides } = this.state;\n    const newRides = configureRides(rides, selectedRide);\n    const viewport = moveMapTo(selectedRide.viewport);\n    const deleteFn = this.deleteRideFn(selectedRide);\n    this.setState({\n      selectedRide,\n      rides: newRides,\n      deleteFn,\n      viewport,\n    });\n  }\n\n  setPath = (path) => {\n    const deleteFn = () => this.setPath([]);\n    const newState = { path, deleteFn };\n    const { rides, viewport } = this.state;\n    if (!!path.length) {\n      const newRide = getNewRide(path, viewport);\n      const newRides = [\n        ...rides.filter(isNotNew),\n        ...newRide\n      ];\n      newState.rides = configureRides(newRides, newRide[0]);\n      newState.selectedRide = newRide[0];\n    } else {\n      newState.rides = rides.filter(isNotNew);\n      newState.selectedRide = {};\n    }\n    return new Promise(resolve => this.setState(newState, resolve));\n  }\n\n  undoPath = () => {\n    const { path } = this.state;\n    this.setPath(path.slice(0, -1));\n  }\n\n  saveRide = (ride) => {\n    const { path, viewport } = this.state;\n    const isNew = ride.id === NEW_ID;\n    const id = isNew ? uuid() : ride.id;\n    const payload = {\n      ...ride,\n      id,\n      viewport,\n    };\n    return putRide(payload)\n      .then(fetchRides)\n      .then((rides) => {\n        const newRides = [...rides.filter(isNotNew)];\n        if (!isNew && !!path.length) {\n          newRides.push(getNewRide(path, viewport)[0]);\n        }\n        return configureRides(newRides, payload);\n      })\n      .then((rides) => {\n        this.setState({\n          rides,\n          selectedRide: payload,\n          deleteFn: this.deleteRideFn(payload),\n          path: isNew ? [] : path,\n          isSaveDialogOpen: false,\n        });\n      });\n  }\n\n  toggleDrawer = (isDrawerOpen) => this.setState({ isDrawerOpen });\n  toggleSaveDialog = (isSaveDialogOpen) => this.setState({ isSaveDialogOpen });\n  toggleDeleteConfirm = (isDeleteConfirmOpen) => this.setState({ isDeleteConfirmOpen });\n  setViewport = (viewport) => this.setState({ viewport });\n\n  render() {\n    const {\n      rides,\n      selectedRide,\n      path,\n      viewport,\n      isDrawerOpen,\n      isSaveDialogOpen,\n      isDeleteConfirmOpen,\n      deleteFn\n    } = this.state;\n    const layers = [...rides.map(makeRideLayer)];\n    const showControls = !!path.length && selectedRide && selectedRide.id === NEW_ID;\n\n    return (\n      <div style={{display: 'flex'}}>\n        <CssBaseline />\n        <Header\n          isDrawerOpen={isDrawerOpen}\n          toggleDrawer={this.toggleDrawer}\n        />\n        <Drawer\n          isDrawerOpen={isDrawerOpen}\n          toggleDrawer={this.toggleDrawer}\n        >\n          <RideList\n            rides={rides}\n            selectRide={this.selectRide}\n            toggleSaveDialog={this.toggleSaveDialog}\n            toggleDeleteConfirm={this.toggleDeleteConfirm}\n          />\n        </Drawer>\n        <Content isDrawerOpen={isDrawerOpen}>\n          <Map\n            viewport={viewport}\n            setViewport={this.setViewport}\n            path={path}\n            setPath={this.setPath}\n            layers={layers}\n          />\n          {showControls && (\n            <Controls\n              undoPath={this.undoPath}\n              toggleSaveDialog={this.toggleSaveDialog}\n              toggleDeleteConfirm={this.toggleDeleteConfirm}\n            />\n          )}\n        </Content>\n        <SaveDialog\n          open={isSaveDialogOpen}\n          toggle={this.toggleSaveDialog}\n          ride={selectedRide}\n          saveRide={this.saveRide}\n        />\n        <DeleteConfirm\n          open={isDeleteConfirmOpen}\n          toggle={this.toggleDeleteConfirm}\n          deleteFn={deleteFn}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// serviceWorker.register();\n"],"sourceRoot":""}