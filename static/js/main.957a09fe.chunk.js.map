{"version":3,"sources":["config/config.js","utils/db.js","static/directions_bike_24px.svg","utils/makeRideLayer.js","utils/helpers.js","utils/routing.js","Content/Content.js","Content/index.js","static/nathan.png","static/sarah.jpeg","static/jesse.jpeg","Header/Header.js","Header/index.js","Drawer/Drawer.js","Drawer/index.js","RideDetails/RideDetails.js","RideDetails/index.js","RideList/RideList.js","RideList/index.js","Map/index.js","Map/Map.js","Controls/Controls.js","Controls/index.js","SaveDialog/SaveDialog.js","SaveDialog/index.js","DeleteConfirm/DeleteConfirm.js","DeleteConfirm/index.js","App.js","index.js"],"names":["MAPBOX_ACCESS_TOKEN","DRAWER_WIDTH","NEW_ID","IS_NARROW","window","innerWidth","VIEWPORT_USA","latitude","longitude","zoom","COLORS","black","red","green","blue","yellow","gray","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","dynamo","DynamoDB","DocumentClient","TableName","fetchRides","Promise","resolve","reject","scan","err","data","Items","map","ride","color","putRide","put","Item","deleteRide","delete","Key","id","makeIconLayer","IconLayer","name","coordinates","path","iconAtlas","rider","iconMapping","x","y","width","height","mask","getIcon","getColor","getPosition","d","sizeMinPixels","makeRideLayer","layers","PathLayer","rounded","widthMinPixels","isSelected","startIconData","push","length","endIconData","isNotNew","startAndEndIcons","icons","configureRides","rides","selectedRide","riders","milage","lineString","units","getNewRide","viewport","moveMapTo","hash","location","routing","getRidersFromUrl","match","params","split","getSelectedRideFromUrl","find","RegExp","updateRidersHash","newHash","r","join","replace","updateRideHash","useStyles","makeStyles","theme","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","position","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","mainContent","top","right","bottom","left","Content","isDrawerOpen","children","classes","className","clsx","appBar","backgroundColor","appBarShift","hide","hideForSmall","avatars","avatar","marginRight","inactive","opacity","menuButton","Header","toggleDrawer","addRider","removeRider","rideId","AppBar","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","Avatar","src","jesse","nathan","sarah","includes","isInactive","A","newRiders","concat","to","filter","withRouter","React","memo","drawer","flexShrink","drawerPaper","MyDrawer","Drawer","anchor","open","paper","Divider","card","paddingLeft","transform","cardContent","paddingBottom","avatarGroup","flexDirection","marginTop","borderWidth","margin","getAvatar","RideDetails","date","details","undefined","toFixed","Card","CardContent","AvatarGroup","root","textDecoration","loadingRides","bikeIcon","minWidth","rideName","whiteSpace","textOverflow","overflow","paddingRight","selected","actionIcons","zIndex","actionIconButton","RideList","selectRide","toggleShowAll","toggleSaveDialog","toggleDeleteConfirm","canAdmin","sessionStorage","getItem","handleSelection","List","ListItem","button","ListItemText","primary","LinearProgress","sort","a","b","localeCompare","isNew","canEdit","disableTouchRipple","secondary","size","disabled","fontSize","e","preventDefault","stopPropagation","Map","setViewport","setPath","lngLat","onViewportChange","mapboxApiAccessToken","mapStyle","viewState","undo","save","Controls","undoPath","wrapper","cursor","buttonProgress","getDefaultRiders","SaveDialog","toggle","saveRide","useState","setName","setRiders","setDate","setDisabled","useEffect","onClose","labels","Dialog","aria-labelledby","DialogTitle","style","DialogContent","DialogContentText","n","TextField","autoFocus","label","type","fullWidth","onChange","value","target","DialogActions","Button","finally","CircularProgress","DeleteConfirm","deleteFn","handleClose","aria-describedby","then","App","state","props","isShowAll","isSaveDialogOpen","isDeleteConfirmOpen","componentDidMount","setState","deleteRideFn","newRides","adjustedViewport","newState","newRide","slice","uuid","payload","this","allRides","every","v","showControls","CssBaseline","Component","ReactDOM","render","setItem","component","document","getElementById"],"mappings":"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","file":"static/js/main.957a09fe.chunk.js","sourcesContent":["// import { FlyToInterpolator } from 'react-map-gl';\n\nexport const MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibmF0aGFua2lwcCIsImEiOiJjazNid2k3enIwN2QzM2Nucmp5b3NmaXY0In0.cMIErB8-bLVio-MGSeXlfg';\n\nexport const DRAWER_WIDTH = 300;\n\nexport const NEW_ID = 'NEW_ID';\n\nexport const IS_LANDSCAPE = () => window.innerHeight < window.innerWidth;\nexport const IS_NARROW = window.innerWidth < 500;\nexport const VIEWPORT_USA = {\n  latitude: 39.0,\n  longitude: -97.0,\n  zoom: IS_NARROW ? 2.25 : 3.25,\n  // transitionDuration: 0,\n  // transitionInterpolator: new FlyToInterpolator(),\n  // transitionEasing: d3.easeCubic,\n};\n\nexport const COLORS = {\n  black: [0, 0, 0],\n  red: [150, 50, 50],\n  green: [50, 150 ,50],\n  blue: [50, 50, 150],\n  yellow: [255, 255, 0],\n  gray: [200,200,200],\n};\n","import AWS from 'aws-sdk';\nimport { COLORS } from '../config';\n\nAWS.config.region = 'us-east-2'; // Region\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: 'us-east-2:1056edee-e9e2-4c61-8f7e-45d31a5ab8a4',\n});\n\nconst dynamo = new AWS.DynamoDB.DocumentClient();\nconst TableName = 'cyclog';\n\nexport function fetchRides() {\n  return new Promise((resolve, reject) => {\n    dynamo.scan({ TableName }, (err, data) => {\n      if (err) {\n        reject('ride list cannot be retrieved');\n      } else {\n        resolve(data.Items.map(ride => ({\n          ...ride,\n          color: COLORS.black,\n        })));\n      }\n    });\n  });\n}\n\nexport function putRide(ride) {\n  return new Promise((resolve, reject) => {\n    dynamo.put({ Item: ride, TableName }, (err, data) => {\n      if (err) {\n        reject('ride was not saved');\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nexport function deleteRide(ride) {\n  return new Promise((resolve, reject) => {\n    dynamo.delete({ TableName, Key: { id: ride.id } }, (err, data) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n","export default __webpack_public_path__ + \"static/media/directions_bike_24px.53835df2.svg\";","import { IconLayer, PathLayer } from '@deck.gl/layers';\nimport { COLORS } from '../config';\n// import rider from './rider.png';\nimport rider from '../static/directions_bike_24px.svg';\n// import { fetchPath } from './fetchPath';\n\n// function getPath(data) {\n//   const setsOf100Points = [];\n//   for (let i = 0; data.path.length > i; i += 100) {\n//     setsOf100Points.push(data.path.slice(i, i+100));\n//   }\n//   return Promise.all(setsOf100Points.map(fetchPath))\n//     .then(paths =>\n//       [{ path: paths.reduce((a,c) => a.concat(c), []) }]\n//     );\n// }\n\nfunction makeIconLayer(data) {\n  return new IconLayer({\n    id: data.name,\n    data: [{ coordinates: data.path }],\n    iconAtlas: rider,\n    iconMapping: {\n      rider: {x: 0, y: 0, width: 24, height: 24, mask: true}\n    },\n    getIcon: () => 'rider',\n    getColor: () => data.color,\n    getPosition: d => d.coordinates,\n    sizeMinPixels: 28\n  });\n}\n\nfunction makePathLayer(data) {\n  return new PathLayer({\n    id: data.id,\n    data: [{ path: data.path }],\n    getColor: () => data.color,\n    rounded: true,\n    widthMinPixels: 2,\n  });\n}\n\nexport function makeRideLayer(ride) {\n  const layers = [makePathLayer(ride)];\n  if (ride.isSelected) {\n    const startIconData = {\n      ...ride,\n      name: `${ride.name}-start`,\n      color: COLORS.green,\n      path: ride.path[0]\n    };\n    layers.push(makeIconLayer(startIconData));\n\n    if (ride.path.length > 1) {\n      const endIconData = {\n        ...ride,\n        name: `${ride.name}-end`,\n        color: COLORS.red,\n        path: ride.path[ride.path.length - 1]\n      };\n      layers.push(makeIconLayer(endIconData));\n    }\n  }\n  return layers;\n}\n","import {lineString} from '@turf/helpers';\nimport length from '@turf/length';\nimport {\n  COLORS,\n  MAPBOX_ACCESS_TOKEN,\n  NEW_ID,\n  VIEWPORT_USA\n} from '../config';\n\nexport const isNotNew = ride => ride.id !== NEW_ID;\n\nfunction startAndEndIcons(ride) {\n  if (!ride) return [];\n\n  const icons = [];\n  icons.push({\n    ...ride,\n    name: `${ride.name}-start`,\n    color: COLORS.green,\n    path: ride.path[0]\n  });\n\n  if (ride.path.length > 1) {\n    icons.push({\n      ...ride,\n      name: `${ride.name}-end`,\n      color: COLORS.red,\n      path: ride.path[ride.path.length - 1]\n    });\n  }\n\n  return icons;\n};\n\nexport const configureRides = (rides, selectedRide = {}) =>\n  rides.map(ride => {\n    const isSelected = ride.id === selectedRide.id;\n    return {\n      ...ride,\n      isSelected,\n      riders: ride.riders || '',\n      icons: isSelected ? startAndEndIcons(ride) : [],\n      color: isSelected ? COLORS.blue : COLORS.gray,\n      milage: ride.path.length > 1\n        ? length(lineString(ride.path), { units: 'miles' })\n        : 0,\n    };\n  });\n\nexport const getNewRide = (path, viewport) => {\n  let ride = [];\n  if (!!path.length) {\n    ride = [{\n      id: NEW_ID,\n      name: '• New ride •',\n      color: COLORS.blue,\n      path,\n      viewport\n    }];\n  }\n  return ride;\n}\n\nexport const fetchPath = (coordinates) => {\n  const c = coordinates\n    .reduce((a, c) => { a.push(`${c[0]},${c[1]}`); return a; }, [])\n    .join(';');\n  const r = coordinates\n    .map(() => 20)\n    .join(';');\n  return fetch(`https://api.mapbox.com/matching/v5/mapbox/cycling/${c}?radiuses=${r}&tidy=true&geometries=geojson&access_token=${MAPBOX_ACCESS_TOKEN}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  })\n    .then(res => res.json())\n    .then(({ matchings }) => matchings.reduce(\n      (a,c) => {\n        a.push(c.geometry.coordinates);\n        return a;\n      }, [])\n    );\n}\n\nexport const colorizePaths = (rides, ride) =>\n  rides.map(r => ({\n    ...r,\n    color: r.id === ride.id\n      ? COLORS.blue\n      : COLORS.black,\n  }));\n\nexport const moveMapTo = ({ longitude, latitude, zoom }) => ({\n  ...VIEWPORT_USA,\n  longitude,\n  latitude,\n  zoom,\n});\n","const hash = () => window.location.hash;\nconst routing = {\n  getRidersFromUrl: (match) => {\n    const { riders } = match.params;\n    // const riders = hash().match(/#\\/([\\w,]*)\\//);\n    return riders && riders.split(',');\n  },\n  getSelectedRideFromUrl: (rides) => rides.find(ride =>\n    hash().match(new RegExp(`/${ride.id}$`))),\n  updateRidersHash: (riders) => {\n    const r = riders.join(',');\n    let newHash;\n    if (hash()) {\n      newHash = hash().replace(/#\\/[\\w,]*\\//, `/${r}/`);\n    } else {\n      newHash = `/${r}/`;\n    }\n    window.location.hash = newHash;\n  },\n  updateRideHash: (ride) =>\n    window.location.hash = hash().replace(/\\/[\\w\\d-]*$/, `/${ride.id}`)\n}\n\nexport default routing;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DRAWER_WIDTH } from '../config';\n\nconst useStyles = makeStyles(theme => ({\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'space-between',\n  },\n  content: {\n    position: 'relative',\n    flexGrow: 1,\n    height: '100vh',\n    padding: theme.spacing(0),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -DRAWER_WIDTH,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  mainContent: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n}));\n\nexport default function Content({ isDrawerOpen,  children }) {\n  const classes = useStyles();\n\n  return (\n    <main\n      className={clsx(classes.content, {\n        [classes.contentShift]: isDrawerOpen,\n      })}\n    >\n      <div className={classes.drawerHeader} />\n      <div className={classes.mainContent}>\n        {children}\n      </div>\n    </main>\n  );\n}\n","import Content from './Content';\nexport default Content;\n","export default __webpack_public_path__ + \"static/media/nathan.9853d902.png\";","export default __webpack_public_path__ + \"static/media/sarah.ea13e7a6.jpeg\";","export default __webpack_public_path__ + \"static/media/jesse.cb0a2a1a.jpeg\";","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { DRAWER_WIDTH } from '../config';\nimport nathan from '../static/nathan.png';\nimport sarah from '../static/sarah.jpeg';\nimport jesse from '../static/jesse.jpeg';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: '#323296',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    marginLeft: DRAWER_WIDTH,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  hide: {\n    display: 'none',\n  },\n  hideForSmall: {\n    '@media only screen and (max-width: 620px)': {\n      display: 'none',\n    },\n  },\n  avatars: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    position: 'absolute',\n    right: theme.spacing(2),\n    '@media only screen and (max-width: 420px)': {\n      right: theme.spacing(1),\n    },\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n    '@media only screen and (max-width: 420px)': {\n      height: theme.spacing(4),\n      width: theme.spacing(4),\n      marginRight: theme.spacing(1),\n    },\n  },\n  inactive: {\n    opacity: .25\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction Header({ match, isDrawerOpen, toggleDrawer, addRider, removeRider }) {\n  const classes = useStyles();\n  const handleDrawerOpen = () => toggleDrawer(true);\n  const { riders, rideId } = match.params;\n  const isInactive = name => !riders.includes(name);\n  // const small = useMediaQuery('(max-width: 420px)');\n\n  return (\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: isDrawerOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, isDrawerOpen && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {riders === 'jessecoconut' ? 'Jesse Coconut\\'s Cyclog' : 'Sibling Cyclog'}\n          </Typography>\n          <div className={clsx(classes.avatars, isDrawerOpen && classes.hide)}>\n            {riders === 'jessecoconut' && (\n              <Avatar\n                className={classes.avatar}\n                src={jesse}\n              />\n            )}\n            {riders !== 'jessecoconut' && [nathan,sarah,jesse].map(avatar => {\n              const name = avatar.replace(/^.*\\/(\\w+)..*$/, \"$1\");\n              const inactive = isInactive(name);\n              const A = () => (\n                <Avatar\n                  className={clsx(classes.avatar, inactive && classes.inactive, isDrawerOpen && classes.hideForSmall)}\n                  src={avatar}\n                />\n              );\n              if (inactive) {\n                const newRiders = `${riders.concat(`,${name}`)}`;\n                return (\n                  <Link key={name} to={`/${newRiders}${rideId ? `/${rideId}` : ''}`}>\n                    <A />\n                  </Link>\n                );\n              } else if (riders.includes(',')) {\n                const newRiders = riders.split(',').filter(r => r !== name).join(',');\n                return (\n                  <Link key={name} to={`/${newRiders}${rideId ? `/${rideId}` : ''}`}>\n                    <A />\n                  </Link>\n                );\n              } else {\n                return (<A key={name} />);\n              }\n            })}\n          </div>\n        </Toolbar>\n      </AppBar>\n  );\n}\n\nexport default withRouter(React.memo(Header));\n","import Header from './Header';\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { DRAWER_WIDTH } from '../config';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: DRAWER_WIDTH,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: DRAWER_WIDTH,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'space-between',\n  },\n}));\n\nfunction MyDrawer({ isDrawerOpen, toggleDrawer, children }) {\n  const classes = useStyles();\n\n  const handleDrawerClose = () => toggleDrawer(false);\n\n  return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isDrawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h6\" noWrap>\n            Rides\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        {children}\n      </Drawer>\n  );\n}\n\nexport default React.memo(MyDrawer);\n","import Drawer from './Drawer';\nexport default Drawer;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport Avatar from '@material-ui/core/Avatar';\nimport nathan from '../static/nathan.png';\nimport sarah from '../static/sarah.jpeg';\nimport jesse from '../static/jesse.jpeg';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    paddingLeft: theme.spacing(5),\n    position: 'absolute',\n    top: theme.spacing(10),\n    right: '50%',\n    transform: 'translateX(50%)',\n  },\n  cardContent: {\n    '&:last-child': { paddingBottom: theme.spacing(1) },\n    display: 'flex',\n    justifyContent: 'space-around',\n  },\n  avatarGroup: {\n    position: 'absolute',\n    left: theme.spacing(1),\n    top: '50%',\n    transform: 'translateY(-50%)',\n    flexDirection: 'column',\n    marginTop: 4,\n    marginLeft: 8,\n  },\n  avatar: {\n    borderWidth: 1,\n    margin: '-6px 0 0 0',\n    height: theme.spacing(3),\n    width: theme.spacing(3),\n  },\n}));\n\nconst getAvatar = name => {\n  switch(name) {\n    case 'sarah': return sarah;\n    case 'jesse': return jesse;\n    case 'nathan': return nathan;\n    default: return undefined;\n  }\n}\n\nfunction RideDetails({ ride }) {\n  const classes = useStyles();\n\n  const { date, milage = 0, name, riders = '' } = ride;\n  let details = date ? [date] : [];\n  if (milage !== undefined) {\n    details.push(`${milage.toFixed(1)}mi`);\n  }\n  details = details.join(' • ');\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.cardContent}>\n        <AvatarGroup className={classes.avatarGroup}>\n          {riders.split(',').map(rider => {\n            return (\n              <Avatar\n                key={rider}\n                className={classes.avatar}\n                src={getAvatar(rider)}\n              />\n            );\n          })}\n        </AvatarGroup>\n        <div>\n          <Typography variant=\"h6\">{name}</Typography>\n          <Typography variant=\"subtitle1\">{details}</Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default RideDetails;\n","import RideDetails from './RideDetails';\nexport default RideDetails;\n","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport Avatar from '@material-ui/core/Avatar';\nimport nathan from '../static/nathan.png';\nimport sarah from '../static/sarah.jpeg';\nimport jesse from '../static/jesse.jpeg';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport FiberNew from '@material-ui/icons/FiberNew';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { NEW_ID } from '../config';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& a': {\n      color: 'black',\n      textDecoration: 'none',\n    }\n  },\n  loadingRides: {\n    padding: theme.spacing(0, 2),\n  },\n  bikeIcon: {\n    minWidth: 40,\n  },\n  avatarGroup: {\n    flexDirection: 'column',\n    marginTop: 8,\n    marginRight: 8,\n  },\n  avatar: {\n    borderWidth: 1,\n    margin: '-6px 0 0 0',\n    height: theme.spacing(3),\n    width: theme.spacing(3),\n  },\n  rideName: {\n    '& span': {\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    paddingRight: '0 10px 0 0',\n  },\n  selected: {\n    paddingRight: 75,\n  },\n  actionIcons: {\n    position: 'absolute',\n    right: 8,\n    zIndex: 10,\n  },\n  actionIconButton: {\n    marginLeft: 8,\n    padding: 8,\n  },\n}));\n\nconst getAvatar = name => {\n  switch(name) {\n    case 'sarah': return sarah;\n    case 'jesse':\n    case 'jessecoconut':\n      return jesse;\n    case 'nathan': return nathan;\n    default: return undefined;\n  }\n}\n\nfunction RideList({ match, rides, selectRide, toggleShowAll, toggleSaveDialog, toggleDeleteConfirm, children }) {\n  const classes = useStyles();\n  const { riders } = match.params;\n  const canAdmin = !!window.sessionStorage.getItem('cyclog');\n  const handleSelection = (ride) => selectRide(ride);\n\n  return (\n    <List className={classes.root}>\n      {!rides.length ? (\n        <>\n          <ListItem><ListItemText primary=\"Loading...\"/></ListItem>\n          <div className={classes.loadingRides}>\n            <LinearProgress />\n          </div>\n        </>\n      ) : (\n        <>\n          <ListItem\n            button\n            onClick={() => toggleShowAll()}\n          >\n            Toggle ride highlighting\n          </ListItem>\n          <Link to={`/${riders}`}>\n            <ListItem\n              button\n              onClick={() => handleSelection(null)}\n            >\n              Reset map\n            </ListItem>\n          </Link>\n        </>\n      )\n      }\n      {rides\n        .sort((a,b) => a.name.localeCompare(b.name))\n        .map((ride) => {\n          const { id, name, isSelected, milage, date } = ride;\n          const isNew = id === NEW_ID;\n          const canEdit = canAdmin && isSelected && !isNew;\n          let details = date ? [date] : [];\n          details.push(`${milage.toFixed(1)}mi`);\n          details = details.join(' • ');\n          return (\n            <Link to={`/${riders}/${id}`} key={name.concat(id)}>\n              <ListItem\n                button\n                onClick={() => handleSelection(ride)}\n                selected={isSelected}\n                disableTouchRipple={isSelected}\n              >\n                {riders !== 'jessecoconut' && (\n                  <AvatarGroup className={classes.avatarGroup}>\n                    {ride.riders.split(',').map(rider => {\n                      return (\n                        <Avatar\n                          key={rider}\n                          className={classes.avatar}\n                          src={getAvatar(rider)}\n                        />\n                      );\n                    })}\n                  </AvatarGroup>\n                )}\n                <ListItemText\n                  className={clsx(classes.rideName, canEdit && classes.selected)}\n                  primary={ride.name}\n                  secondary={details}\n                />\n                {isNew &&\n                  <IconButton\n                    size=\"small\"\n                    className={classes.actionIcons}\n                    disabled\n                  >\n                    <FiberNew fontSize=\"small\" />\n                  </IconButton>\n                }\n                {canEdit &&\n                  <div className={classes.actionIcons}>\n                    <IconButton\n                      className={classes.actionIconButton}\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        toggleSaveDialog(true);\n                      }}\n                    >\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                    <IconButton\n                      className={classes.actionIconButton}\n                      color=\"secondary\"\n                      size=\"small\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        toggleDeleteConfirm(true);\n                      }}\n                    >\n                      <DeleteForever fontSize=\"small\" />\n                    </IconButton>\n                  </div>\n                }\n              </ListItem>\n            </Link>\n          );\n      })}\n    </List>\n  );\n}\n\nexport default withRouter(React.memo(RideList));\n","import RideList from './RideList';\nexport default RideList;\n","import Map from './Map';\nexport default Map;\n","import React from 'react';\nimport MapGL from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { MAPBOX_ACCESS_TOKEN } from '../config';\n\nconst Map = ({\n  viewport,\n  setViewport,\n  path,\n  setPath,\n  layers\n}) => (\n  <MapGL\n    {...viewport}\n    onClick={e => {\n      setPath([ ...path, e.lngLat]);\n      setViewport({\n          ...viewport,\n          longitude: e.lngLat[0],\n          latitude: e.lngLat[1],\n        });\n      }}\n      onViewportChange={setViewport}\n      mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n      mapStyle=\"mapbox://styles/mapbox/outdoors-v11\"\n      height=\"100%\"\n      width=\"100%\"\n    >\n      <DeckGL\n        viewState={viewport}\n        layers={layers}\n      />\n  </MapGL>\n);\n\nexport default Map;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Undo from '@material-ui/icons/Undo';\nimport Save from '@material-ui/icons/Save';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: '50%',\n    transform: 'translateX(50%)',\n    width: 200,\n  },\n  cardContent: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    padding: theme.spacing(1),\n    '&:last-child': { paddingBottom: theme.spacing(1) },\n  },\n  undo: { color: '#323296' },\n  save: { color: '#329632' },\n  delete: { color: '#963232' },\n}));\n\nfunction Controls({ undoPath, toggleSaveDialog, toggleDeleteConfirm }) {\n  const classes = useStyles();\n\n  const handleUndoClick = () => undoPath();\n\n  const handleSaveClick = () => toggleSaveDialog(true);\n\n  const handleDeleteClick = () => toggleDeleteConfirm(true);\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <IconButton\n            aria-label=\"undo\"\n            className={classes.undo}\n            onClick={handleUndoClick}\n          >\n            <Undo />\n          </IconButton>\n          <IconButton\n            aria-label=\"save\"\n            className={classes.save}\n            onClick={handleSaveClick}\n          >\n            <Save />\n          </IconButton>\n          <IconButton\n            aria-label=\"trash\"\n            className={classes.delete}\n            onClick={handleDeleteClick}\n          >\n            <DeleteForever />\n          </IconButton>\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(Controls);\n","import Controls from './Controls';\n\nexport default Controls;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Avatar from '@material-ui/core/Avatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport nathan from '../static/nathan.png';\nimport sarah from '../static/sarah.jpeg';\nimport jesse from '../static/jesse.jpeg';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  avatars: {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  },\n  avatar: {\n    cursor: 'pointer',\n    margin: theme.spacing(2),\n  },\n  inactive: {\n    opacity: .25,\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst getDefaultRiders = riders => (riders && riders.split(',')) || [];\n\nfunction SaveDialog({ open, toggle, ride, saveRide }) {\n  const [name, setName] = useState(ride.name || '');\n  const [riders, setRiders] = useState(getDefaultRiders(ride.riders));\n  const [date, setDate] = useState(ride.date || '');\n  const [disabled, setDisabled] = useState(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setRiders(getDefaultRiders(ride.riders));\n    setName(ride.name);\n    setDate(ride.date);\n  }, [ride]);\n\n  const addRider = name => setRiders([...riders, name]);\n  const removeRider = name => setRiders(riders.filter(n => n !== name));\n\n  const onSaveClick = () => {\n    setDisabled(true);\n    const r = riders.sort((a,b) => a[1].localeCompare(b[1])).join(',') || undefined;\n    saveRide({\n      ...ride,\n      riders: r,\n      name,\n      date,\n    }).finally(() => {\n      setDisabled(false);\n    });\n  }\n\n  const onClose = () => toggle(false);\n\n  const labels = {\n    name: ride.id\n      ? 'Update this ride'\n      : 'Save your ride'\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\" style={{minWidth: 300}}>\n        Ride Details\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {labels.name}\n        </DialogContentText>\n        <div className={classes.avatars}>\n          {[nathan,sarah,jesse].map(avatar => {\n            const name = avatar.replace(/^.*\\/(\\w+)..*$/, \"$1\");\n            const inactive = !riders.includes(name);\n            return (\n              <Avatar\n                key={name}\n                className={clsx(classes.avatar, inactive && classes.inactive)}\n                src={avatar}\n                onClick={() => {\n                  if (inactive) addRider(name); else removeRider(name);\n                }}\n              />\n            );\n          })}\n        </div>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Name\"\n          type=\"text\"\n          fullWidth\n          onChange={({ target: { value } }) => setName(value)}\n          value={name}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"date\"\n          label=\"Date\"\n          type=\"text\"\n          fullWidth\n          onChange={({ target: { value } }) => setDate(value)}\n          value={date}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onClose}\n          disabled={disabled}\n        >\n          Cancel\n        </Button>\n        <div className={classes.wrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSaveClick}\n            disabled={disabled}\n          >\n            Save\n          </Button>\n          {disabled && <CircularProgress className={classes.buttonProgress} size={24} />}\n        </div>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default React.memo(SaveDialog);\n","import SaveDialog from './SaveDialog';\nexport default SaveDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction DeleteConfirm({ open, toggle, deleteFn }) {\n\n  const handleClose = () => {\n    toggle(false);\n  };\n\n  const handleDelete = () => {\n    deleteFn().then(handleClose);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Are you sure?\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Deleting a ride is permanent and irreversible.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Keep my Ride\n        </Button>\n        <Button onClick={handleDelete}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Delete Forever\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default React.memo(DeleteConfirm);\n","import DeleteConfirm from './DeleteConfirm';\nexport default DeleteConfirm;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {v4 as uuid} from 'uuid';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { IS_NARROW, VIEWPORT_USA, NEW_ID, COLORS } from './config';\nimport {\n  configureRides,\n  deleteRide,\n  fetchRides,\n  getNewRide,\n  isNotNew,\n  makeRideLayer,\n  moveMapTo,\n  putRide,\n  routing,\n} from './utils';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Content from './Content';\nimport Header from './Header';\nimport Drawer from './Drawer';\nimport RideDetails from './RideDetails';\nimport RideList from './RideList';\nimport Map from './Map';\nimport Controls from './Controls';\nimport SaveDialog from './SaveDialog';\nimport DeleteConfirm from './DeleteConfirm';\n\n// import data from './data';\n\nclass App extends React.Component {\n  state = {\n    rides: [],\n    riders: routing.getRidersFromUrl(this.props.match),\n    selectedRide: {},\n    path: [],\n    viewport: VIEWPORT_USA,\n    isShowAll: false,\n    isDrawerOpen: !IS_NARROW,\n    isSaveDialogOpen: false,\n    isDeleteConfirmOpen: false,\n    deleteFn: null\n  };\n\n  componentDidMount = () => {\n    const { rideId } = this.props.match.params;\n    fetchRides()\n      /*\n       * to import data\n       * 1) uncomment this block\n       * 2) let any ride in RideList be editable\n       * 3) use ui to load a ride then edit and save it\n       */\n      // .then((rides) => {\n      //   rides.push({\n      //     ...data[0],\n      //     id: NEW_ID,\n      //     riders: 'nathan',\n      //   });\n      //   return rides;\n      // })\n      .then(configureRides)\n      .then(rides => this.setState({ rides }, () => {\n          const selectedRide = rides.find(r => r.id === rideId);\n          if (selectedRide) {\n            this.selectRide(selectedRide);\n          }\n        })\n      );\n  }\n\n  deleteRideFn = (selectedRide) => () => {\n    const { rides } = this.state;\n    return deleteRide(selectedRide)\n      .then(() => new Promise(resolve =>\n        this.setState({\n          rides: rides.filter(r => r.id !== selectedRide.id),\n          selectedRide: {},\n        }, resolve))\n      );\n  }\n\n  selectRide = (selectedRide) => {\n    if (!selectedRide) {\n      this.setState({ viewport: moveMapTo(VIEWPORT_USA) });\n      return;\n    }\n    const { rides, isDrawerOpen } = this.state;\n    const newRides = configureRides(rides, selectedRide);\n    const { zoom } = selectedRide.viewport;\n    const adjustedViewport = {\n      ...selectedRide.viewport,\n      zoom: IS_NARROW ? zoom - 1 : zoom\n    };\n    const viewport = moveMapTo(adjustedViewport);\n    const deleteFn = this.deleteRideFn(selectedRide);\n    this.setState({\n      isShowAll: false,\n      selectedRide,\n      rides: newRides,\n      deleteFn,\n      viewport,\n      isDrawerOpen: IS_NARROW ? false : isDrawerOpen,\n    });\n  }\n\n  setPath = (path) => {\n    const deleteFn = () => this.setPath([]);\n    const newState = { path, deleteFn };\n    const { rides, viewport } = this.state;\n    if (!!path.length) {\n      const newRide = getNewRide(path, viewport);\n      const newRides = [\n        ...rides.filter(isNotNew),\n        ...newRide\n      ];\n      newState.rides = configureRides(newRides, newRide[0]);\n      newState.selectedRide = newState.rides.find(r => r.isSelected);\n    } else {\n      newState.rides = rides.filter(isNotNew);\n      newState.selectedRide = {};\n    }\n    return new Promise(resolve => this.setState(newState, resolve));\n  }\n\n  undoPath = () => {\n    const { path } = this.state;\n    this.setPath(path.slice(0, -1));\n  }\n\n  saveRide = (ride) => {\n    const { path, viewport } = this.state;\n    const isNew = ride.id === NEW_ID;\n    const id = isNew ? uuid() : ride.id;\n    const payload = {\n      ...ride,\n      id,\n      viewport,\n    };\n    return putRide(payload)\n      .then(fetchRides)\n      .then((rides) => {\n        const newRides = [...rides.filter(isNotNew)];\n        if (!isNew && !!path.length) {\n          newRides.push(getNewRide(path, viewport)[0]);\n        }\n        return configureRides(newRides, payload);\n      })\n      .then((rides) => {\n        this.setState({\n          rides,\n          selectedRide: payload,\n          deleteFn: this.deleteRideFn(payload),\n          path: isNew ? [] : path,\n          isSaveDialogOpen: false,\n        });\n      });\n  }\n\n  toggleShowAll = () => this.setState({ isShowAll: !this.state.isShowAll });\n  toggleDrawer = (isDrawerOpen) => this.setState({ isDrawerOpen });\n  toggleSaveDialog = (isSaveDialogOpen) => this.setState({ isSaveDialogOpen });\n  toggleDeleteConfirm = (isDeleteConfirmOpen) => this.setState({ isDeleteConfirmOpen });\n  setViewport = (viewport) => this.setState({ viewport });\n\n  render() {\n    const {\n      rides: allRides,\n      selectedRide,\n      path,\n      viewport,\n      isShowAll,\n      isDrawerOpen,\n      isSaveDialogOpen,\n      isDeleteConfirmOpen,\n      deleteFn\n    } = this.state;\n\n    // const { rideId } = this.props.match.params;\n    // let viewport = this.state.viewport;\n    // if (selectedRide && selectedRide.id !== rideId) {\n    //   const r = allRides.find(r => r.id === rideId);\n    //   if (r && r.viewport) {\n    //     viewport = r.viewport;\n    //   }\n    // }\n\n    const { riders } = this.props.match.params;\n    const getColor = (path, ride, selectedRide) =>\n      isShowAll\n        ? COLORS.blue : path.length && ride.id !== selectedRide.id\n        ? COLORS.gray\n        : ride.color;\n    const rides = allRides\n      .filter((ride) => riders\n        .split(',')\n        .map((name) => {\n          if (name === 'jessecoconut') {\n            return ride.riders === 'jesse' || !ride.riders;\n          }\n          return ride.riders.includes(name) || !ride.riders\n        })\n        .every(v => v)\n      )\n      .map(ride => ({\n        ...ride,\n        color: getColor(path, ride, selectedRide),\n      }))\n      .sort((a,b) => +(a.id === selectedRide.id) - +(b.id === selectedRide.id));\n    const layers = [...rides.map(makeRideLayer)];\n    const showControls = !!path.length && selectedRide && selectedRide.id === NEW_ID;\n\n    return (\n      <div style={{display: 'flex'}}>\n        <CssBaseline />\n        <Header\n          isDrawerOpen={isDrawerOpen}\n          toggleDrawer={this.toggleDrawer}\n          riders={riders}\n          addRider={this.addRider}\n          removeRider={this.removeRider}\n        />\n        <Drawer\n          isDrawerOpen={isDrawerOpen}\n          toggleDrawer={this.toggleDrawer}\n        >\n          <RideList\n            rides={rides}\n            selectRide={this.selectRide}\n            toggleShowAll={this.toggleShowAll}\n            toggleSaveDialog={this.toggleSaveDialog}\n            toggleDeleteConfirm={this.toggleDeleteConfirm}\n          />\n        </Drawer>\n        <Content isDrawerOpen={isDrawerOpen}>\n          <Map\n            viewport={viewport}\n            setViewport={this.setViewport}\n            path={path}\n            setPath={this.setPath}\n            layers={layers}\n          />\n          {selectedRide.id && <RideDetails ride={selectedRide} />}\n          {showControls && (\n            <Controls\n              undoPath={this.undoPath}\n              toggleSaveDialog={this.toggleSaveDialog}\n              toggleDeleteConfirm={this.toggleDeleteConfirm}\n            />\n          )}\n        </Content>\n        <SaveDialog\n          open={isSaveDialogOpen}\n          toggle={this.toggleSaveDialog}\n          ride={selectedRide}\n          saveRide={this.saveRide}\n        />\n        <DeleteConfirm\n          open={isDeleteConfirmOpen}\n          toggle={this.toggleDeleteConfirm}\n          deleteFn={deleteFn}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/admin\" render={() => {\n          window.sessionStorage.setItem('cyclog', true);\n          return <Redirect to=\"/nathan,sarah,jesse\" />}\n        }\n      />\n      <Route path=\"/:riders([nathan|sarah|jesse|,]+)/:rideId?\" component={App} />\n      <Route path=\"/:riders(jessecoconut)/:rideId?\" component={App} />\n      <Route render={() => <Redirect to=\"/nathan,sarah,jesse\" />} />\n    </Switch>\n  </Router>,\n  document.getElementById('root'));\n// serviceWorker.register();\n"],"sourceRoot":""}